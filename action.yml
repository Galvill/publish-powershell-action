name: Publish PowerShell
description: |
  Publish a PowerShell module or script to GitHub Packages, the Posh Test
  Gallery, or the PowerShell Gallery.
inputs:
  token:
    description: |
      Token to authenticate.
    required: true
  target:
    description: |
      Set to `packages` for GitHub Packages, `testgallery` for Posh Test 
      Gallery, or `gallery` for PowerShell Gallery.
    required: true
  path:
    description: |
      Path to publish relative to the root of the project. Can either 
      be a .psm1 file, a .ps1 file, or a directory. If a directory, the action 
      will search for a .psm1 file in the root. If none are found, it will then 
      search for a .ps1 file in the root.
runs:
  using: "composite"
  steps:
    - name: Publish to GitHub Packages
      run: |
        Write-Host "Starting Action..."

        Write-Host "Installing PowerShellGet 3..."
        Install-Module PowerShellGet -AllowPrerelease -Force -Repository PSGallery -SkipPublisherCheck

        $FullPath = "${{ github.workspace }}\${{ inputs.path }}"

        if (Test-Path -Path $FullPath -PathType Container) {
          Write-Host "Input 'path' is a directory."

          . .\FindPublishableFiles.ps1
          $FullPath = Find-PublishableFiles -Path $FullPath
        } else {
          Write-Host "Input 'path' is a file."
        }

        $NuGetUri = "https://nuget.pkg.github.com/${{ github.repository_owner }}"

        $LocalRepoPath = "${{ github.workspace }}\repo"

        Register-PSResourceRepository -Name "LocalRepo" -URL $LocalRepoPath

        Publish-PSResource -Path $FullPath -Repository "LocalRepo"

        $NupkgPath = Get-ChildItem -Path $LocalRepoPath -Include "*.nupkg" -Recurse

        dotnet tool install --global gpr

        gpr push -k ${{ inputs.github-token }} $NupkgPath -r $NuGetUri
      shell: pwsh
      if: ${{ inputs.target == 'packages' }}
