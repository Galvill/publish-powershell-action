name: Publish PowerShell to GitHub Packages
description: Publish a PowerShell module or script to GitHub Packages.
inputs:
  github-token:
    description: |
      Token to authenticate to GitHub.
    required: true
  publish-type:
    description: |
      Set to "module" to publish a module or "script" to publish a script.
    required: true
  path:
    description: |
      Path to publish relative to the root of the project. For a module, 
      should be a directory containing the .psm1 file in the root. For a script, 
      should be the path to the .ps1 file.
runs:
  using: "composite"
  steps:
    - name: Publish
      run: |
        Install-Module PowerShellGet -AllowPrerelease -Force -Repository PSGallery -SkipPublisherCheck

        $FullPath = "${{ github.workspace }}\${{ inputs.path }}"

        $NuGetUri = "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

        $Cred = New-Object System.Management.Automation.PSCredential -ArgumentList "${{ github.repository_owner }}", (ConvertTo-SecureString -AsPlainText "${{ inputs.github-token }}" -Force)

        nuget sources Add -Name "GitHubPackages" -Source $NuGetUri -UserName "${{ github.repository_owner }}" -Password "${{ inputs.github-token }}"
        #Register-PSRepository -Name "GitHubPackages" -SourceLocation $NuGetUri -ScriptSourceLocation $NuGetUri -PublishLocation $NuGetUri -ScriptPublishLocation $NuGetUri -Credential $Cred
        Register-PSResourceRepository -Name "GitHubPackages" -URL $NuGetUri

        if ("${{ inputs.publish-type }}" -eq "module") {
          $Manifest = Get-ChildItem -Path $FullPath -Include "*.psd1" -Recurse
          $ManifestData = Test-ModuleManifest -Path $Manifest.FullName

          $PublishPath = "${{ github.action_path }}\$($ManifestData.Name)"
          New-Item -Path $PublishPath -Type Directory | Out-Null
          Copy-Item -Path "$FullPath\*" -Destination $PublishPath -Recurse

          $NuspecString = (
            "<?xml version="1.0"?>`r`n" +
            "<package xmlns="http://schemas.microsoft.com/packaging/2011/10/nuspec.xsd">`r`n" +
            "<metadata>`r`n" +
            "<id>$($ManifestData.Name)</id>`r`n" +
            "<version>$FullVersion</version>`r`n" +
            "<authors>$($ManifestData.Author)</authors>`r`n" +
            "<owners>$($ManifestData.Author)</owners>`r`n" +
            "<requireLicenseAcceptance>false</requireLicenseAcceptance>`r`n" +
            "<description>$($ManifestData.Description)</description>`r`n" +
            "<releaseNotes>$($ManifestData.PrivateData.PSData.ReleaseNotes)</releaseNotes>`r`n" +
            "<copyright>$($ManifestData.Copyright)</copyright>`r`n" +
            "<tags>$($ManifestData.PrivateData.PSData.Tags)</tags>`r`n" +
            "<dependencies>`r`n" +
            "</dependencies>`r`n" +
            "<repository type="git" url="https://github.com/${{ github.repository }}" />`r`n" +
            "</metadata>`r`n" +
            "</package>"
          )

          Publish-PSResource -Path $PublishPath -Respository "GitHubPackages" -APIKey "${{ inputs.github-token }}" -Nuspec $NuspecString

          #Publish-Module -Path $PublishPath -Repository "GitHubPackages" -Credential $Cred -NuGetApiKey "${{ inputs.github-token }}"
        } elseif ("${{ inputs.publish-type }}" -eq "script") {
          # Implement this
        } else {
          throw "'publish-type' did not match any expected values."
        }
      shell: pwsh
